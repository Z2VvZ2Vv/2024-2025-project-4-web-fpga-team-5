# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
      - 'backend/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.6.0' # You can specify the Node.js version you need

      # Runs a single command using the runners shell
      - name: CI starting
        run: | 
          echo ⏳ CI testing begin...

      - name: Install Dependencies
        run: |
          echo ⏳ install frontend dependencies...
          cd ./frontend/
          npm install
          echo ✅ frontend dependencies installed!
          echo ⏳ install backend dependencies...
          cd ../backend/
          npm install
          echo ✅ backend dependencies installed!

      - name: Building
        run: | 
          echo ⏳ Building...
          cd ./frontend/
          npm run build
          echo ✅ Built!

  frontend-testing:

      runs-on: ubuntu-latest

      steps:
        
        - uses: actions/checkout@v4
            
        # Deploy Render app
        - name: Deploy Application
          env:
              deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          run: |
            echo ⏳ Frontend testing is setting up...
            if [[ -z "$deploy_url" ]]; then
              echo "❌ Error: deploy_url is not set!"
              exit 1
            fi
            echo "⏳ Triggering deployment..."
            curl -v "$deploy_url"
            sleep 60
            echo ✅ Application deployed!

        - name: Run e2e testing
          run: | 
            echo ⏳ frontend e2e testing begin...
            cd ./frontend/
            npm i
            npm run test:e2e
            echo ✅ frontend e2e testing ended!

  backend-testing:

    runs-on: ubuntu-latest

    steps: 

      - uses: actions/checkout@v4

      - name: Run API e2e testing
        run: |
          echo ⏳ API testing begin...
          cd ./backend/
          npm i
          npm run test:e2e
          echo ✅ backend e2e testing ended!
